totaldamageData2 <- filter(totaldamageData, value > 1e7)
plot(totaldamageData2$value)
totaldamageData2 <- filter(totaldamageData, value > 1e8)
plot(totaldamageData2$value)
totaldamageData2 <- filter(totaldamageData, value > 1e9)
plot(totaldamageData2$value)
x <- filter(totaldamageData, value > 1e9)
f <- ggplot(x, aes(x=EVTYPE, y=value, fill=variable)) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle=90), plot.title = element_text(face="bold")) +
scale_x_discrete(name="Event Type") +
ggtitle("TITLE GOES HERE")
f
f <- ggplot(x, aes(x=EVTYPE, y=value/1e9, fill=variable)) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle=90), plot.title = element_text(face="bold")) +
scale_x_discrete(name="Event Type") +
ggtitle("TITLE GOES HERE")
f
figure1 <- ggplot(x, aes(x=EVTYPE, y=value/1e9, fill=variable)) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle=90), plot.title = element_text(face="bold")) +
scale_x_discrete(name="Event Type") +
scale_y_continuous(name = "Damage estimates in billions of dollars") +
ggtitle("Crop and Property damage by Event Type")
figure1
x <- filter(totaldamageData, value > 1e10)
figure1 <- ggplot(x, aes(x=EVTYPE, y=value/1e9, fill=variable)) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle=90), plot.title = element_text(face="bold")) +
scale_x_discrete(name="Event Type") +
scale_y_continuous(name = "Damage estimates in billions of dollars") +
ggtitle("Crop and Property damage by Event Type")
figure1
x <- filter(totaldamageData, value > 1e9)
figure1 <- ggplot(x, aes(x=EVTYPE, y=value/1e9, fill=variable)) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle=90), plot.title = element_text(face="bold")) +
scale_x_discrete(name="Event Type") +
scale_y_continuous(name = "Damage estimates in billions of dollars") +
ggtitle("Crop and Property damage by Event Type")
figure1
figure1 <- ggplot(x, aes(x=EVTYPE, y=value/1e9, fill=variable)) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle=90), plot.title = element_text(face="bold")) +
scale_x_discrete(name="Event Type") +
scale_y_continuous(name = "Damage estimates in billions of dollars", labels = dollars) +
ggtitle("Crop and Property damage by Event Type")
figure1
figure1 <- ggplot(x, aes(x=EVTYPE, y=value/1e9, fill=variable)) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle=90), plot.title = element_text(face="bold")) +
scale_x_discrete(name="Event Type") +
scale_y_continuous(name = "Damage estimates in billions ($)", labels = dollars) +
ggtitle("Crop and Property damage by Event Type")
figure1
x <- filter(totaldamageData, value > 1e9)
figure1 <- ggplot(x, aes(x=EVTYPE, y=value/1e9, fill=variable)) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle=90), plot.title = element_text(face="bold")) +
scale_x_discrete(name="Event Type") +
scale_y_continuous(name = "Damage estimates in billions ($)", labels = dollars) +
ggtitle("Crop and Property damage by Event Type")
figure1
figure1 <- ggplot(x, aes(x=EVTYPE, y=value/1e9, fill=variable)) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle=90), plot.title = element_text(face="bold")) +
scale_x_discrete(name="Event Type") +
scale_y_continuous(name = "Damage estimates in billions ($)") +
ggtitle("Crop and Property damage by Event Type")
figure1
humanData <- melt(data = stormData, id.vars = c("EVTYPE"), measure.vars = c("FATALITIES", "INJURIES"), na.rm = TRUE)
humanData <- melt(data = stormData, id.vars = c("EVTYPE"), measure.vars = c("FATALITIES", "INJURIES"), na.rm = TRUE)
totalhumanData <- aggregate(value ~ EVTYPE + variable, data=humanData, FUN = sum)
#x <- filter(totalhumanData, value > 1e9)
x <- totalhumanData
figure1 <- ggplot(x, aes(x=EVTYPE, y=value/1e9, fill=variable)) +
dsf
figure1 <- ggplot(x, aes(x=EVTYPE, y=value, fill=variable)) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle=90), plot.title = element_text(face="bold")) +
scale_x_discrete(name="Event Type") +
scale_y_continuous(name = "Damage estimates in billions ($)") +
ggtitle("Crop and Property damage by Event Type")
figure1
x <- filter(totalhumanData, value > 0)
figure1 <- ggplot(x, aes(x=EVTYPE, y=value, fill=variable)) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle=90), plot.title = element_text(face="bold")) +
scale_x_discrete(name="Event Type") +
scale_y_continuous(name = "Damage estimates in billions ($)") +
ggtitle("Crop and Property damage by Event Type")
figure1
plot(x$value)
summary(x$value)
x <- filter(totalhumanData, value > 500)
figure1 <- ggplot(x, aes(x=EVTYPE, y=value, fill=variable)) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle=90), plot.title = element_text(face="bold")) +
scale_x_discrete(name="Event Type") +
scale_y_continuous(name = "Damage estimates in billions ($)") +
ggtitle("Crop and Property damage by Event Type")
figure1
mean(totaldamageData$value)
summary(totaldamageData$value)
sd(totaldamageData$value)
sort(totaldamageData$value)
plot(sort(totaldamageData$value))
x <- totaldamageData
x
plot(sort(x$value))
sd(x)
sd(x$value)
x <- filter(totaldamageData, value > 0)
sd(x$value)
plot(sort(x$value))
hist(sort(x$value))
hist(sort(x$value), breaks = 100)
hist(sort(x$value), breaks = 1000)
x <- filter(totaldamageData, value > 1000)
hist(sort(x$value), breaks = 1000)
x <- filter(totaldamageData, value > 1000000)
hist(sort(x$value), breaks = 1000)
summary(totaldamageData$value)
x <- filter(totaldamageData, value < 1e9)
hist(sort(x$value), breaks = 1000)
x <- filter(totaldamageData, value < 1e8)
hist(sort(x$value), breaks = 1000)
x <- filter(totaldamageData, value < 1e7)
hist(sort(x$value), breaks = 1000)
x <- filter(totaldamageData, value < 1e5)
hist(sort(x$value), breaks = 1000)
x <- filter(totaldamageData, value > mean(totaldamageData))
figure1 <- ggplot(x, aes(x=EVTYPE, y=value/1e9, fill=variable)) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle=90), plot.title = element_text(face="bold")) +
scale_x_discrete(name="Event Type") +
scale_y_continuous(name = "Damage estimates in billions ($)") +
ggtitle("Crop and Property damage by Event Type")
figure1
mean(totaldamageData)
mean(totaldamageData$value)
x <- filter(totaldamageData, value > mean(totaldamageData$value))
x <- filter(totaldamageData, value > mean(totaldamageData$value))
x <- filter(totaldamageData, value > as.integer(mean(totaldamageData$value))
)
x <- filter(totaldamageData, value > 1e9)
figure1 <- ggplot(x, aes(x=EVTYPE, y=value/1e9, fill=variable)) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle=90), plot.title = element_text(face="bold")) +
scale_x_discrete(name="Event Type") +
scale_y_continuous(name = "Damage estimates in billions ($)") +
ggtitle("Crop and Property damage by Event Type")
figure1
summary(totaldamageData$value)
humanData <- melt(data = stormData, id.vars = c("EVTYPE"), measure.vars = c("FATALITIES", "INJURIES"), na.rm = TRUE)
totalhumanData <- aggregate(value ~ EVTYPE + variable, data=humanData, FUN = sum)
summary(totaldamageData$value)
summary(totalhumanData$value)
totaldamageData <- filter(totaldamageData, value > 0)
summary(totaldamageData$value)
x <- filter(totaldamageData, value > 1.153e9)
figure1 <- ggplot(x, aes(x=EVTYPE, y=value/1e9, fill=variable)) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle=90), plot.title = element_text(face="bold")) +
scale_x_discrete(name="Event Type") +
scale_y_continuous(name = "Damage estimates in billions ($)") +
ggtitle("Crop and Property damage by Event Type")
figure1
x <- filter(totaldamageData, value > 1e9)
figure1 <- ggplot(x, aes(x=EVTYPE, y=value/1e9, fill=variable)) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle=90), plot.title = element_text(face="bold")) +
scale_x_discrete(name="Event Type") +
scale_y_continuous(name = "Damage estimates in billions ($)") +
ggtitle("Crop and Property damage by Event Type")
figure1
totalhumanData <- filter(totalhumanData, value > 0)
summary(totalhumanData$value)
x <- filter(totalhumanData, value > 550)
figure1 <- ggplot(x, aes(x=EVTYPE, y=value, fill=variable)) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle=90), plot.title = element_text(face="bold")) +
scale_x_discrete(name="Event Type") +
scale_y_continuous(name = "Damage estimates in billions ($)") +
ggtitle("Crop and Property damage by Event Type")
figure1
figure1 <- ggplot(x, aes(x=EVTYPE, y=value, fill=variable)) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle=90), plot.title = element_text(face="bold")) +
scale_x_discrete(name="Event Type") +
scale_y_continuous(name = "Injuries and Fatalities") +
ggtitle("Injuries and Fatalities by Event Type")
figure1
figure1 <- ggplot(x, aes(x=EVTYPE, y=value, fill=variable)) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle=90), plot.title = element_text(face="bold")) +
scale_x_discrete(name="Event Type") +
scale_y_continuous(name = "Injuries and Fatalities", trans=log2_trans()) +
ggtitle("Injuries and Fatalities by Event Type")
figure1
figure1 <- ggplot(x, aes(x=EVTYPE, y=value, fill=variable)) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle=90), plot.title = element_text(face="bold")) +
scale_x_discrete(name="Event Type") +
scale_y_continuous(name = "Injuries and Fatalities", trans=log10_trans()) +
ggtitle("Injuries and Fatalities by Event Type")
figure1
figure1 <- ggplot(x, aes(x=EVTYPE, y=value, fill=variable)) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle=90), plot.title = element_text(face="bold")) +
scale_x_discrete(name="Event Type") +
scale_y_log10(name = "Injuries and Fatalities") +
#    scale_y_continuous(name = "Injuries and Fatalities", trans=log10_trans()) +
ggtitle("Injuries and Fatalities by Event Type")
figure1
figure1 <- ggplot(x, aes(x=EVTYPE, y=value, fill=variable)) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle=90), plot.title = element_text(face="bold")) +
scale_x_discrete(name="Event Type") +
scale_y_sqrt(name = "Injuries and Fatalities") +
#    scale_y_continuous(name = "Injuries and Fatalities", trans=log10_trans()) +
ggtitle("Injuries and Fatalities by Event Type")
figure1
figure1 <- ggplot(x, aes(x=EVTYPE, y=value, fill=variable)) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle=90), plot.title = element_text(face="bold")) +
scale_x_discrete(name="Event Type") +
scale_y_sqrt(name = "Injuries and Fatalities", breaks=seq(0,160000,1000)) +
#    scale_y_continuous(name = "Injuries and Fatalities", trans=log10_trans()) +
ggtitle("Injuries and Fatalities by Event Type")
figure1
scale_y_sqrt(name = "Injuries and Fatalities", breaks=seq(0,160000,10000)) +
kj
figure1 <- ggplot(x, aes(x=EVTYPE, y=value, fill=variable)) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle=90), plot.title = element_text(face="bold")) +
scale_x_discrete(name="Event Type") +
scale_y_sqrt(name = "Injuries and Fatalities", breaks=seq(0,160000,10000)) +
#    scale_y_continuous(name = "Injuries and Fatalities", trans=log10_trans()) +
ggtitle("Injuries and Fatalities by Event Type")
figure1
figure1 <- ggplot(x, aes(x=EVTYPE, y=value, fill=variable)) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle=90), plot.title = element_text(face="bold")) +
scale_x_discrete(name="Event Type") +
#    scale_y_sqrt(name = "Injuries and Fatalities") +
#    scale_y_continuous(name = "Injuries and Fatalities") +
ggtitle("Injuries and Fatalities by Event Type")
figure1
figure1 + scale_y_sqrt(name = "Injuries and Fatalities")
figure1
figure1 + scale_y_sqrt(name = "Injuries and Fatalities")
figure1 + scale_y_continuous(trans=log2_trans())
figure1 + scale_y_continuous(trans=log2_trans())
figure1 + scale_y_continuous(trans=log10_trans())
figure1 + scale_y_log10()
figure1 + scale_y_sqrt()
figure1 <- ggplot(x, aes(x=EVTYPE, y=value, fill=variable)) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle=90), plot.title = element_text(face="bold")) +
scale_x_discrete(name="Event Type") +
scale_y_continuous(name = "Injuries and Fatalities") +
ggtitle("Injuries and Fatalities by Event Type")
figure1
X
x
sqrt(x$value)
figure1 <- ggplot(x, aes(x=EVTYPE, y=value, fill=variable)) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle=90), plot.title = element_text(face="bold")) +
scale_x_discrete(name="Event Type") +
scale_y_sqrt(name = "Injuries and Fatalities") +
#scale_y_continuous(name = "Injuries and Fatalities") +
ggtitle("Injuries and Fatalities by Event Type")
figure1
figure1 + coord_trans(y = "sqrt")
figure1 + coord_trans(y = "log2")
figure1 + coord_trans(y = "log10")
figure1 + coord_trans(y = "sqrt")
figure1
figure1 <- ggplot(x, aes(x=EVTYPE, y=value, fill=variable)) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle=90), plot.title = element_text(face="bold")) +
scale_x_discrete(name="Event Type") +
#scale_y_sqrt(name = "Injuries and Fatalities") +
#scale_y_continuous(name = "Injuries and Fatalities") +
ggtitle("Injuries and Fatalities by Event Type")
figure1
figure2 <- ggplot(x, aes(x=EVTYPE, y=value, fill=variable)) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle=90), plot.title = element_text(face="bold")) +
scale_x_discrete(name="Event Type") +
scale_y_sqrt(name = "Injuries and Fatalities") +
#scale_y_continuous(name = "Injuries and Fatalities") +
ggtitle("Injuries and Fatalities by Event Type")
figure2
figure2 <- ggplot(x, aes(x=EVTYPE, y=value, fill=variable)) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle=90), plot.title = element_text(face="bold")) +
scale_x_discrete(name="Event Type") +
scale_y_sqrt(name = "Injuries and Fatalities (trans=Sqrt)") +
#scale_y_continuous(name = "Injuries and Fatalities") +
ggtitle("Injuries and Fatalities by Event Type")
figure2
figure2 <- ggplot(x, aes(x=EVTYPE, y=value, fill=variable)) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle=90), plot.title = element_text(face="bold")) +
scale_x_discrete(name="Event Type") +
scale_y_sqrt(name = "Injuries and Fatalities SCALE=Sqrt)") +
#scale_y_continuous(name = "Injuries and Fatalities") +
ggtitle("Injuries and Fatalities by Event Type")
figure2
figure2 <- ggplot(x, aes(x=EVTYPE, y=value, fill=variable)) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle=90), plot.title = element_text(face="bold")) +
scale_x_discrete(name="Event Type") +
scale_y_sqrt(name = "Injuries and Fatalities (Scale=Sqrt)") +
#scale_y_continuous(name = "Injuries and Fatalities") +
ggtitle("Injuries and Fatalities by Event Type")
figure2
damageData <- melt(data = stormData, id.vars = c("EVTYPE"), measure.vars = c("CROPDamage", "PROPDamage"), na.rm = TRUE)
totalDamageData <- aggregate(value ~ EVTYPE + variable, data=damageData, FUN = sum)
totalDamageData <- filter(totalDamageData, value > 0)
summary(totalDamageData$value)
totalDamageData
arrange(totalDamageData, value) % slice(1:10)
arrange(totalDamageData, value) %>% slice(1:10)
arrange(totalDamageData, desc(value) %>% slice(1:10)
)
arrange(totalDamageData, desc(value)) %>% slice(1:10)
arrange(totalDamageData, desc(value)) %>% slice(1:20)
arrange(totalHumanData, desc(value)) %>% slice(1:20)
damageData <- melt(data = stormData, id.vars = c("EVTYPE"), measure.vars = c("CROPDamage", "PROPDamage"), na.rm = TRUE)
totalDamageData <- aggregate(value ~ EVTYPE + variable, data=damageData, FUN = sum)
totalDamageData <- filter(totalDamageData, value > 0)
summary(totalDamageData$value)
arrange(totalDamageData, desc(value)) %>% slice(1:20)
totalDamageData <- filter(totalDamageData, value > 1e9)
figure1 <- ggplot(totalDamageData, aes(x=EVTYPE, y=value/1e9, fill=variable)) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle=90), plot.title = element_text(face="bold")) +
scale_x_discrete(name="Event Type") +
#scale_y_sqrt(name = "Damage estimates in billions ($)") +
scale_y_continuous(name = "Damage estimates in billions ($)") +
ggtitle("Crop and Property damage by Event Type")
figure1
figure1 + scale_y_sqrt(name = "Damage estimates in billions ($)")
figure1 <- ggplot(totalDamageData, aes(x=EVTYPE, y=value/1e9, fill=variable)) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle=90), plot.title = element_text(face="bold")) +
scale_x_discrete(name="Event Type") +
scale_y_sqrt(name = "Damage estimates in billions ($)") +
#scale_y_continuous(name = "Damage estimates in billions ($)") +
ggtitle("Crop and Property damage by Event Type")
figure1
arrange(totalDamageData, desc(value))
figure1 <- ggplot(totalDamageData, aes(x=EVTYPE, y=value/1e9, fill=variable)) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle=90), plot.title = element_text(face="bold")) +
scale_x_discrete(name="Event Type") +
scale_y_sqrt(name = "Damage estimates in billions ($)") +
#scale_y_continuous(name = "Damage estimates in billions ($)") +
ggtitle("Crop and Property damage by Event Type")
figure1
summary(totalHumanData$value)
humanData <- melt(data = stormData, id.vars = c("EVTYPE"), measure.vars = c("FATALITIES", "INJURIES"), na.rm = TRUE)
totalHumanData <- aggregate(value ~ EVTYPE + variable, data=humanData, FUN = sum)
totalHumanData <- filter(totalHumanData, value > 0)
summary(totalHumanData$value)
totalHumanData <- filter(totalHumanData, value > 550)
arrange(totalHumanData, desc(value)) %>% slice(1:20)
arrange(totalHumanData, desc(value))
figure2 <- ggplot(totalHumanData, aes(x=EVTYPE, y=value, fill=variable)) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle=90), plot.title = element_text(face="bold")) +
scale_x_discrete(name="Event Type") +
scale_y_sqrt(name = "Injuries and Fatalities") +
#scale_y_continuous(name = "Injuries and Fatalities") +
ggtitle("Injuries and Fatalities by Event Type")
figure2
table(stormData$PROPDMGEXP)
fileHandle <- "repdata-data-StormData.csv.bz2"
stormData <-read.csv(bzfile(fileHandle))
# Reduce dataframe by selection only required follows and rows with non-zero values
columnsRequired <- c("EVTYPE", "FATALITIES", "INJURIES", "PROPDMG", "PROPDMGEXP", "CROPDMG", "CROPDMGEXP")
rowsRequired <- stormData$PROPDMG != 0 | stormData$CROPDMG != 0 | stormData$FATALITIES != 0 | stormData$INJURIES != 0
stormData <- subset(stormData, rowsRequired, select=columnsRequired)
```
sort(table(stormData$EVTYPE),decreasing = TRUE)[1:10]
# Number of factor levels BEFORE cleaning data
length(levels(stormData$EVTYPE))
stormData$EVTYPE <- as.factor(toupper(stormData$EVTYPE))
length(levels(stormData$EVTYPE))
# Remove leading whitespace
stormData$EVTYPE <- as.factor(sub(pattern = "^[ \t]+", replacement = "",stormData$EVTYPE))
stormData$EVTYPE <- as.factor(sub(pattern = "TSTM WIND.*", replacement = "THUNDERSTORM WIND",stormData$EVTYPE))
stormData$EVTYPE <- as.factor(sub(pattern = "THUNDERSTORM WIND.*", replacement = "THUNDERSTORM WIND",stormData$EVTYPE))
stormData$EVTYPE <- as.factor(sub(pattern = "HAIL .*", replacement = "HAIL",stormData$EVTYPE))
stormData$EVTYPE <- as.factor(sub(pattern = "TORNADO .*", replacement = "TORNADO",stormData$EVTYPE))
stormData$EVTYPE <- as.factor(sub(pattern = "HIGH WIND.*", replacement = "HIGH WIND",stormData$EVTYPE))
# Top 10 Event Type AFTER cleaning data
sort(table(stormData$EVTYPE),decreasing = TRUE)[1:10]
```{r echo = TRUE, results='markup'}
# Remove leading whitespace
table(stormData$EVTYPE)
arrange(table(stormData$EVTYPE))
summary(totalDamageData$value)
sort(table(stormData$EVTYPE),decreasing = TRUE)[1:10]
length(levels(stormData$EVTYPE))
stormData$EVTYPE <- as.factor(toupper(stormData$EVTYPE))
length(levels(stormData$EVTYPE))
table(stormData$PROPDMGEXP)
fileHandle <- "repdata-data-StormData.csv.bz2"
stormData <-read.csv(bzfile(fileHandle))
columnsRequired <- c("EVTYPE", "FATALITIES", "INJURIES", "PROPDMG", "PROPDMGEXP", "CROPDMG", "CROPDMGEXP")
rowsRequired <- stormData$PROPDMG != 0 | stormData$CROPDMG != 0 | stormData$FATALITIES != 0 | stormData$INJURIES != 0
stormData <- subset(stormData, rowsRequired, select=columnsRequired)
sort(table(stormData$EVTYPE),decreasing = TRUE)[1:10]
length(levels(stormData$EVTYPE))
stormData$EVTYPE <- as.factor(toupper(stormData$EVTYPE))
length(levels(stormData$EVTYPE))
stormData$EVTYPE <- as.factor(sub(pattern = "^[ \t]+", replacement = "",stormData$EVTYPE))
# Further reduce namespace
stormData$EVTYPE <- as.factor(sub(pattern = "TSTM WIND.*", replacement = "THUNDERSTORM WIND",stormData$EVTYPE))
stormData$EVTYPE <- as.factor(sub(pattern = "THUNDERSTORM WIND.*", replacement = "THUNDERSTORM WIND",stormData$EVTYPE))
stormData$EVTYPE <- as.factor(sub(pattern = "HAIL .*", replacement = "HAIL",stormData$EVTYPE))
stormData$EVTYPE <- as.factor(sub(pattern = "TORNADO .*", replacement = "TORNADO",stormData$EVTYPE))
stormData$EVTYPE <- as.factor(sub(pattern = "HIGH WIND.*", replacement = "HIGH WIND",stormData$EVTYPE))
```
sort(table(stormData$EVTYPE),decreasing = TRUE)[1:10]
sort(table(stormData$EVTYPE),decreasing = TRUE)[1:10]
length(levels(stormData$EVTYPE))
table(stormData$PROPDMGEXP)
stormData$PROPDMGEXP <- sub(pattern = "h", replacement = "2",stormData$PROPDMGEXP , ignore.case = TRUE)
stormData$PROPDMGEXP <- sub(pattern = "k", replacement = "3",stormData$PROPDMGEXP , ignore.case = TRUE)
stormData$PROPDMGEXP <- sub(pattern = "m", replacement = "6",stormData$PROPDMGEXP , ignore.case = TRUE)
stormData$PROPDMGEXP <- sub(pattern = "b", replacement = "9",stormData$PROPDMGEXP , ignore.case = TRUE)
stormData$PROPDMGEXP <- sub(pattern = "[^1-9]", replacement = "0",stormData$PROPDMGEXP)
stormData$PROPDMGEXP <- sub(pattern = "[?]", replacement = "0",stormData$PROPDMGEXP)
stormData$PROPDMGEXP <- as.numeric(stormData$PROPDMGEXP)
table(stormData$PROPDMGEXP)
stormData$PROPDamage <- stormData$PROPDMG * (10 ^ stormData$PROPDMGEXP)
table(stormData$CROPDMGEXP)
stormData$CROPDMGEXP <- sub(pattern = "h", replacement = "2",stormData$CROPDMGEXP , ignore.case = TRUE)
stormData$CROPDMGEXP <- sub(pattern = "k", replacement = "3",stormData$CROPDMGEXP , ignore.case = TRUE)
stormData$CROPDMGEXP <- sub(pattern = "m", replacement = "6",stormData$CROPDMGEXP , ignore.case = TRUE)
stormData$CROPDMGEXP <- sub(pattern = "b", replacement = "9",stormData$CROPDMGEXP , ignore.case = TRUE)
stormData$CROPDMGEXP <- sub(pattern = "[^1-9]", replacement = "0",stormData$CROPDMGEXP , ignore.case = TRUE)
stormData$CROPDMGEXP <- sub(pattern = "[?]", replacement = "0",stormData$CROPDMGEXP , ignore.case = TRUE)
stormData$CROPDMGEXP <- as.numeric(stormData$CROPDMGEXP)
table(stormData$CROPDMGEXP)
stormData$CROPDamage <- stormData$CROPDMG * (10 ^ stormData$CROPDMGEXP)
damageData <- melt(data = stormData, id.vars = c("EVTYPE"), measure.vars = c("CROPDamage", "PROPDamage"), na.rm = TRUE)
totalDamageData <- aggregate(value ~ EVTYPE + variable, data=damageData, FUN = sum)
totalDamageData <- filter(totalDamageData, value > 0)
totalDamageData <- aggregate(value ~ EVTYPE + variable, data=damageData, FUN = sum)
totalDamageData <- filter(totalDamageData, value > 0)
mean(totalDamageData$value)
totalDamageData <- filter(totalDamageData, value > 1e9)
arrange(totalDamageData, desc(value))
figure1 <- ggplot(totalDamageData, aes(x=EVTYPE, y=value/1e9, fill=variable)) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle=90), plot.title = element_text(face="bold")) +
scale_x_discrete(name="Event Type") +
scale_y_sqrt(name = "Damage estimates in billions ($)") +
#scale_y_continuous(name = "Damage estimates in billions ($)") +
ggtitle("Crop and Property damage by Event Type")
figure1
13972566000/1e9
5661968450/1e9
damageData <- melt(data = stormData, id.vars = c("EVTYPE"), measure.vars = c("CROPDamage", "PROPDamage"), na.rm = TRUE)
5
damageData <- melt(data = stormData, id.vars = c("EVTYPE"), measure.vars = c("CROPDamage", "PROPDamage"), na.rm = TRUE)
totalDamageData <- aggregate(value ~ EVTYPE + variable, data=damageData, FUN = sum)
mean(totalDamageData$value)
totalDamageData <- filter(totalDamageData, value > 1e9)
arrange(totalDamageData, desc(value))
figure1 <- ggplot(totalDamageData, aes(x=EVTYPE, y=value/1e9, fill=variable)) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle=90), plot.title = element_text(face="bold")) +
scale_x_discrete(name="Event Type") +
scale_y_sqrt(name = "Damage estimates in billions ($)") +
ggtitle("Crop and Property damage by Event Type")
figure1
humanData <- melt(data = stormData, id.vars = c("EVTYPE"), measure.vars = c("FATALITIES", "INJURIES"), na.rm = TRUE)
totalHumanData <- aggregate(value ~ EVTYPE + variable, data=humanData, FUN = sum)
totalHumanData <- filter(totalHumanData, value > 0)
totalHumanData <- aggregate(value ~ EVTYPE + variable, data=humanData, FUN = sum)
summary(totalHumanData$value)
mean(totalHumanData$value)
totalHumanData <- filter(totalHumanData, value > 0)
mean(totalHumanData$value)
arrange(totalHumanData, desc(value))
figure2 <- ggplot(totalHumanData, aes(x=EVTYPE, y=value, fill=variable)) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle=90), plot.title = element_text(face="bold")) +
scale_x_discrete(name="Event Type") +
scale_y_sqrt(name = "Injuries and Fatalities") +
#scale_y_continuous(name = "Injuries and Fatalities") +
ggtitle("Injuries and Fatalities by Event Type")
figure2
totalHumanData <- filter(totalHumanData, value > 550)
arrange(totalHumanData, desc(value))
figure2 <- ggplot(totalHumanData, aes(x=EVTYPE, y=value, fill=variable)) +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle=90), plot.title = element_text(face="bold")) +
scale_x_discrete(name="Event Type") +
scale_y_sqrt(name = "Injuries and Fatalities") +
#scale_y_continuous(name = "Injuries and Fatalities") +
ggtitle("Injuries and Fatalities by Event Type")
figure2
